fbb.map = function(){
    var self = this;
    self.map = {};
    var mapEl;
    var $_addressInput;
    var icon_path = "<%= image_path 'icon/ball_pointer.png' %>";
    self.mapOptions = {};


    var initialize = function(){
        checkForMap();
        showCourtDOM();
    };

    var checkForMap = function(){
        var mapScript = $("#showMap");
        if(mapScript.length){
            mapEl = $(".mapEl")[0];
            prepareMap(mapEl);
            //autoComplete();
            geoComplete();
        }
    };

    var getLatLng = function(){
        if($("#lat").val() && $("#lng").val()){
            self.lat = parseFloat( $("#lat").val() );
            self.lng = parseFloat( $("#lng").val() );
        }
        if($("#court_lat").val() && $("#court_lng").val()){
            self.lat = parseFloat( $("#court_lat").val() );
            self.lng = parseFloat( $("#court_lng").val() );
        }
    };

    var simpleMap = function(){
        //to test that the map is working
        self.map = new google.maps.Map(mapEl, self.mapOptions);
    };

    var setupOptions = function(){
        self.mapOptions = {
            center: new google.maps.LatLng(self.lat, self.lng),
            zoom: 15,
            scrollwheel: false,
            mapTypeId: google.maps.MapTypeId.ROADMAP,
            disableDefaultUI: true
        };
    };

    var prepareMap = function(mapEl){
        getLatLng();
        setupOptions();
        self.map = new google.maps.Map(mapEl, self.mapOptions);
        setupMapCursor();
        prepareDOM();
        testDistance();
    };

    var testDistance = function(){
        var service = new google.maps.DistanceMatrixService();
        var origin = new google.maps.LatLng(fbb.defaultLat, fbb.defaultLng);
        var destination = new google.maps.LatLng(self.lat, self.lng);

        service.getDistanceMatrix(
            {
                origins : [origin],
                destinations : [destination],
                travelMode: google.maps.TravelMode.DRIVING,
                unitSystem: google.maps.UnitSystem.METRIC,
                avoidHighways: false,
                avoidTolls: false
            }, foundDistance
        );
    };

    var foundDistance = function(response, status){
        if( status != google.maps.DistanceMatrixStatus.OK){
            console.log("Error was: " + status);
        } else {
            var data = response.rows[0].elements[0];
            if(data.status === "OK"){
                var milesAway = parseFloat(parseFloat(toMiles(data.distance.value)).toFixed(1));
                var milesAwayString = "mile".pluralize(milesAway);
                $("#milesAway").text(milesAway + " " + milesAwayString + " away");
            }
        }
    };

    var toMiles = function(meters){
        return meters *= 0.000621371192;
    }

    var clearMarkers = function(){
        if(fbb.marker){
            fbb.marker.setMap(null);
            fbb.marker = null;
        }
    }

    var setupMapCursor = function(){
        fbb.marker = new google.maps.Marker({
            icon: icon_path,
            position: self.mapOptions.center,
            map: self.map
        });
    };

    var setupDraggableMapCursor = function(_point){
        fbb.marker = new google.maps.Marker({
            icon: icon_path,
            draggable: true,
            position: _point,
            map: self.map
        });
        return fbb.marker;
    }

    var geoComplete = function(){
        $_addressInput = $("#courtAddress");
        if( $("#address_search").length ){
            $("#address_search").geocomplete({
                map: ".mapEl",
                location: new google.maps.LatLng(self.lat, self.lng),
                mapOptions: {
                    zoom: 13,
                    scrollwheel: false,
                    mapTypeId: "roadmap"
                },
                markerOptions: {
                    draggable: true,
                    icon: icon_path
                }
            })
            .bind("geocode:result", geoCompleteSuccessHandler)
            .bind("geocode:dragged", geoCompleteDraggedHandler)
            .bind("geocode:error", function(event, result){
                console.log(event);
                console.log(result);
            });
        }
    };


    var autoComplete = function(){
        console.log("setting up autoComplete");
        var service = new google.maps.places.AutocompleteService();
        if( $("#address_search").length ){
            $("#address_search").typeahead({
                source: function(query, process){
                    console.log("source");
                    service.getPlacePredictions({
                        input: query
                    }, function(predictions, status) {
                        if (status == google.maps.places.PlacesServiceStatus.OK) {
                            process($.map(predictions, function(prediction) {
                                $("#addressNotFound").fadeOut();
                                return prediction.description;
                            }));
                        } else {
                            $("#addressNotFound").fadeIn();
                        }
                    });
                },
                updater: function(_address){
                    console.log("looking up addressss");
                    return lookUpAutoCompleteAddress(_address);
                }
            });
        }
    };


    var lookUpAutoCompleteAddress = function(_address){
        self.geocoder = self.geocoder || new google.maps.Geocoder();
        self.address = _address;
        self.geocoder.geocode({ address: _address}, displayAutoCompleteResults);
    };

    var displayAutoCompleteResults = function(results, status){
        if( status != google.maps.GeocoderStatus.OK ){
            return autoCompleteFailureHandler(results, status);
        } else {
            return autoCompleteSuccessHandler(results, status);
        }
    };

    var geoCompleteDraggedHandler = function(event, result){
        var lat = parseFloat(result.k);
        var lng = parseFloat(result.B);
        var latlng = new google.maps.LatLng(lat, lng);
        self.geocoder = self.geocoder || new google.maps.Geocoder();
        self.geocoder.geocode({'latLng':latlng}, function(results, status){
            if(status == google.maps.GeocoderStatus.OK){
                if (results[0]){
                    console.log(results[0].formatted_address);
                    self.address = results[0].formatted_address;
                    populateDom(self.address, lat, lng);
                    $(".edit_court").submit();
                }
            }
        });
    };


    var geoCompleteSuccessHandler = function(event, result){
        //TODO - make a case by case function
       var _address = result.formatted_address;
       self.address = _address;
       var lat = result.geometry.location.k;
       var lng = result.geometry.location.B;
       populateDom(_address, lat, lng);
       $(".edit_court").submit();
    };

    var populateDom = function(_address, lat, lng){
        populateLatLng(lat, lng);
        populateLocation( _address );
        $_addressInput.val(_address);
        $(".address_search_container").hide();
        $(".map_results_container").show();
        $("#addressNotFound").hide();
        $("#address_search_result").html(self.address + "<br><i>Drag basketball for better court placement</i>");
    }

    var populateLatLng = function(lat, lng){
        $("#court_lat").val(lat);
        $("#court_lng").val(lng);
    }

    var populateLocation = function(location){
        $("#court_location").val(location);
    }


    var autoCompleteFailureHandler = function(results, status){
        $("#addressNotFound").fadeIn();
        var addressSearchEl = $("#address_search");
        addressSearchEl.val("");
        addressSearchEl.focus();
    };

    var prepareDOM = function(){
        $("#searchAgain").click(function(e){
            e.preventDefault();
            clearMarkers();
            $(".address_search_container").show();
            $(".map_results_container").hide();
        });

        $("#submitMap").click(function(e){
            e.preventDefault();
            autoCompleteFailureHandler();
        });
    }

    var showCourtDOM = function(){
        var addressEl = $("#showCourtAddress");

    };

    initialize();
}


