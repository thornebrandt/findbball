fbb.map = function(){
    var self = this;
    self.map = {};
    var mapEl;
    var $_addressInput;
    var icon_path = "<%= image_path 'icon/ball_pointer.png' %>";
    self.mapOptions = {};




    var checkForMap = function(){
        var mapScript = $("#showMap");
        if(mapScript.length){
            mapEl = $(".mapEl")[0];
            prepareMap();
            autoComplete();
        }
    };

    var getLatLng = function(){
        if($("#lat").length && $("#lng").length){
            self.lat = $("#lat").val();
            self.lng = $("#lng").val();
        }
    }

    var simpleMap = function(){
        //to test that the map is working
        self.map = new google.maps.Map(mapEl, self.mapOptions);
    };

    var setupOptions = function(){
        self.mapOptions = {
            center: new google.maps.LatLng(self.lat, self.lng),
            zoom: 13,
            scrollwheel: false,
            mapTypeId: google.maps.MapTypeId.ROADMAP,
            disableDefaultUI: true
        };
    };

    var prepareMap = function(){
        getLatLng();
        setupOptions();
        $_addressInput = $("#courtAddress");
        self.map = new google.maps.Map(mapEl, self.mapOptions);
        setupMapCursor();
        prepareDOM();
        testDistance();
    };

    var testDistance = function(){
        var service = new google.maps.DistanceMatrixService();
        var origin = new google.maps.LatLng(fbb.defaultLat, fbb.defaultLng);
        var destination = new google.maps.LatLng(self.lat, self.lng);

        service.getDistanceMatrix(
            {
                origins : [origin],
                destinations : [destination],
                travelMode: google.maps.TravelMode.DRIVING,
                unitSystem: google.maps.UnitSystem.METRIC,
                avoidHighways: false,
                avoidTolls: false
            }, foundDistance);
    };

    var foundDistance = function(response, status){
        if( status != google.maps.DistanceMatrixStatus.OK){
            console.log("Error was: " + status);
        } else {
            var data = response.rows[0].elements[0];
            if(data.status === "OK"){
                var milesAway = parseFloat(parseFloat(toMiles(data.distance.value)).toFixed(1));
                var milesAwayString = "mile".pluralize(milesAway);
                $("#milesAway").text(milesAway + " " + milesAwayString + " away");
            }
        }
    };

    var toMiles = function(meters){
        return meters *= 0.000621371192;
    }

    var clearMarkers = function(){
        if(fbb.marker){
            fbb.marker.setMap(null);
            fbb.marker = null;
        }
    }

    var setupMapCursor = function(){
        fbb.marker = new google.maps.Marker({
            icon: icon_path,
            position: self.mapOptions.center,
            map: self.map
        });
    };

    var setupDraggableMapCursor = function(_point){
        fbb.marker = new google.maps.Marker({
            icon: icon_path,
            draggable: true,
            position: _point,
            map: self.map
        });
        return fbb.marker;
    }


    var autoComplete = function(){
        var service = new google.maps.places.AutocompleteService();
        $("#address_search").typeahead({
            source: function(query, process){
                service.getPlacePredictions({
                    input: query
                }, function(predictions, status) {
                    if (status == google.maps.places.PlacesServiceStatus.OK) {
                        process($.map(predictions, function(prediction) {
                            $("#addressNotFound").fadeOut();
                            return prediction.description;
                        }));
                    } else {
                        $("#addressNotFound").fadeIn();
                    }
                });
            },
            updater: function(_address){
                return lookUpAutoCompleteAddress(_address);
            }
        });
    };

    // var autoComplete = function(){
    //     var service = new google.maps.places.AutocompleteService();
    //     var t = $("#address_search").typeahead({ local : [] });
    //     t.data("ttView").datasets[0].getSuggestions = function(query, callback){
    //         var suggestions = function(query, process){
    //             console.log("hey");
    //             service.getPlacePredictions({
    //                 input: query
    //             }, function(predictions, status) {
    //                 if (status == google.maps.places.PlacesServiceStatus.OK) {
    //                     process($.map(predictions, function(prediction) {
    //                         $("#addressNotFound").fadeOut();
    //                         return prediction.description;
    //                     }));
    //                 } else {
    //                     $("#addressNotFound").fadeIn();
    //                 }
    //             });
    //         };
    //         var data = [];
    //         for (suggestion in suggestions){
    //             data.push(this._transformDatum(suggestion));
    //         }
    //         callback(data);
    //     };

    // };



    var lookUpAutoCompleteAddress = function(_address){
        self.geocoder = self.geocoder || new google.maps.Geocoder();
        self.address = _address;
        self.geocoder.geocode({ address: _address}, displayAutoCompleteResults);
    };

    var displayAutoCompleteResults = function(results, status){
        if( status != google.maps.GeocoderStatus.OK ){
            return autoCompleteFailureHandler(results, status);
        } else {
            return autoCompleteSuccessHandler(results, status);
        }
    };

    var autoCompleteSuccessHandler = function(results, status){
        var _point = results[0].geometry.location;
        console.log(self.address);
        self.addressInput = $("#courtAddress");
        $_addressInput.val(self.address);
        self.map.setCenter(_point);
        self.map.setZoom(15);
        fbb.marker = setupDraggableMapCursor(_point);
        populateDom(fbb.marker);
        $("#address_search_result").html(self.address + "<br><i>Drag basketball for better court placement</i>");
        google.maps.event.addListener(fbb.marker, 'dragend', function() {
            populateDom(fbb.marker);
            $("#address_search_result").html(self.address + "<br><i>Drag basketball for better court placement</i>");
        });
    };

    var populateDom = function(){
        var lat = fbb.marker.position.lat();
        var lng = fbb.marker.position.lng();
        populateLatLng(lat, lng);
        populateLocation($("#courtAddress").val());
        $(".address_search_container").hide();
        $(".map_results_container").show();
        $("#addressNotFound").hide();
    }

    var populateLatLng = function(lat, lng){
        $("#court_lat").val(lat);
        $("#court_lng").val(lng);
    }

    var populateLocation = function(location){
        $("#court_location").val( "hey man");
        $("#court_location").val(location);
    }


    var autoCompleteFailureHandler = function(results, status){
        $("#addressNotFound").fadeIn();
        var addressSearchEl = $("#address_search");
        addressSearchEl.val("");
        addressSearchEl.focus();
    };

    var prepareDOM = function(){
        $("#searchAgain").click(function(e){
            e.preventDefault();
            clearMarkers();
            $(".address_search_container").show();
            $(".map_results_container").hide();
        });

        $("#submitMap").click(function(e){
            e.preventDefault();
            autoCompleteFailureHandler();
        });
    }

    var showCourtDOM = function(){
        var addressEl = $("#showCourtAddress");

    };

    checkForMap();
    showCourtDOM();
}

